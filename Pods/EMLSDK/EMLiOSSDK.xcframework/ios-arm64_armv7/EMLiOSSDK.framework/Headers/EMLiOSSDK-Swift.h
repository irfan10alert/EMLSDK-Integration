#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef EMLIOSSDK_SWIFT_H
#define EMLIOSSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="EMLiOSSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;

SWIFT_CLASS_NAMED("AcceptEMLTermsRequest")
@interface AcceptEMLTermsRequest : NSObject
@property (nonatomic, readonly) NSInteger version;
- (nonnull instancetype)initWithVersion:(NSInteger)version OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("AcceptTermsResponse")
@interface AcceptTermsResponse : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly) NSError * _Nullable error;
- (nonnull instancetype)initWithSuccess:(BOOL)success error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, AddressDisplayType, open) {
  AddressDisplayTypeReadWrite = 0,
  AddressDisplayTypeRead = 1,
  AddressDisplayTypeNotDisplayed = 2,
};


SWIFT_CLASS_NAMED("CheckEMLTermsAcceptedRequest")
@interface CheckEMLTermsAcceptedRequest : NSObject
@property (nonatomic, readonly) NSInteger version;
- (nonnull instancetype)initWithVersion:(NSInteger)version OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("CheckEMLTermsAcceptedResponse")
@interface CheckEMLTermsAcceptedResponse : NSObject
@property (nonatomic, readonly) BOOL accepted;
@property (nonatomic, readonly) NSError * _Nullable error;
- (nonnull instancetype)initWithAccepted:(BOOL)accepted error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
@class NSCoder;

SWIFT_CLASS_NAMED("Currency")
@interface Currency : NSObject <NSCoding>
@property (nonatomic, readonly, copy) NSString * _Nullable currencyCode;
@property (nonatomic, readonly, strong) NSNumber * _Nullable amountObjc;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EMLCardModel;

SWIFT_CLASS_NAMED("EMLAccountCardTokenRequest")
@interface EMLAccountCardTokenRequest : NSObject
@property (nonatomic, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EMLAccountTokensModel;

SWIFT_CLASS_NAMED("EMLAccountCardTokenResponse")
@interface EMLAccountCardTokenResponse : NSObject
@property (nonatomic, copy) NSArray<EMLAccountTokensModel *> * _Nullable tokens;
- (nonnull instancetype)initWithTokens:(NSArray<EMLAccountTokensModel *> * _Nonnull)tokens OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol EMLAccountEntity;

SWIFT_PROTOCOL_NAMED("EMLAccountDetailsEntity")
@protocol EMLAccountDetailsEntity
- (id <EMLAccountEntity> _Nonnull)getAccount SWIFT_WARN_UNUSED_RESULT;
@end

@class EMLAccountModel;
@class EMLClientModel;

SWIFT_CLASS_NAMED("EMLAccountDetailsModel")
@interface EMLAccountDetailsModel : NSObject <EMLAccountDetailsEntity>
- (nonnull instancetype)initWithAccount:(EMLAccountModel * _Nonnull)account client:(EMLClientModel * _Nullable)client OBJC_DESIGNATED_INITIALIZER;
- (id <EMLAccountEntity> _Nonnull)getAccount SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountDetailsRequest")
@interface EMLAccountDetailsRequest : NSObject
@property (nonatomic) BOOL withClient;
@property (nonatomic) BOOL withFreeText;
@property (nonatomic, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card withClient:(BOOL)withClient withFreeText:(BOOL)withFreeText OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountDetailsResponse")
@interface EMLAccountDetailsResponse : NSObject
@property (nonatomic, strong) EMLAccountDetailsModel * _Nonnull details;
@property (nonatomic) NSError * _Nullable error;
- (nonnull instancetype)initWithDetails:(EMLAccountDetailsModel * _Nonnull)details error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EMLAccountStatus : NSInteger;

SWIFT_PROTOCOL_NAMED("EMLAccountStatusEntity")
@protocol EMLAccountStatusEntity
- (Currency * _Nonnull)getBalance SWIFT_WARN_UNUSED_RESULT;
- (enum EMLAccountStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getExternalAccountId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlasticExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPlasticEnabled SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getMDESConfigId SWIFT_WARN_UNUSED_RESULT;
@end

@protocol EMLFreeTextEntity;

SWIFT_PROTOCOL_NAMED("EMLAccountEntity")
@protocol EMLAccountEntity <EMLAccountStatusEntity>
- (NSString * _Nonnull)getCardNumber SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCompliant SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getNameOnCard SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDisplayName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAccountExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlasticExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (id <EMLFreeTextEntity> _Nullable)getFreeText SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLAccountModel")
@interface EMLAccountModel : NSObject <EMLAccountEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getExternalAccountId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlasticExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCompliant SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getNameOnCard SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDisplayName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAccountExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nonnull)getBalance SWIFT_WARN_UNUSED_RESULT;
- (enum EMLAccountStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPlasticEnabled SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getMDESConfigId SWIFT_WARN_UNUSED_RESULT;
- (id <EMLFreeTextEntity> _Nullable)getFreeText SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLAccountStatus, "EMLAccountStatus", open) {
  EMLAccountStatusPreActive = 1,
  EMLAccountStatusActive = 2,
  EMLAccountStatusInactive = 3,
  EMLAccountStatusExpired = 4,
  EMLAccountStatusClosed = 5,
  EMLAccountStatusEmlInactive = 11,
  EMLAccountStatusInactivePinTriesExceeded = 20,
  EMLAccountStatusLostStolen = 31,
  EMLAccountStatusSuspectedFraud = 32,
  EMLAccountStatusDeactivated = 41,
  EMLAccountStatusReplaced = 42,
  EMLAccountStatusLocked = 43,
  EMLAccountStatusUnknown = 0,
};


enum EMLPinAccess : NSInteger;

SWIFT_CLASS_NAMED("EMLAccountStatusModel")
@interface EMLAccountStatusModel : NSObject <EMLAccountStatusEntity>
- (nonnull instancetype)initWithBalance:(Currency * _Nonnull)balance status:(enum EMLAccountStatus)status externalAccountId:(NSString * _Nonnull)externalAccountId cardNumber:(NSString * _Nonnull)cardNumber plasticExpirationDate:(NSString * _Nonnull)plasticExpirationDate isPlasticEnabled:(BOOL)isPlasticEnabled mdesConfigId:(NSString * _Nonnull)mdesConfigId addressDisplayType:(enum AddressDisplayType)addressDisplayType addressRegistrationRequired:(BOOL)addressRegistrationRequired pinEnabled:(BOOL)pinEnabled pinMode:(enum EMLPinAccess)pinMode OBJC_DESIGNATED_INITIALIZER;
- (Currency * _Nonnull)getBalance SWIFT_WARN_UNUSED_RESULT;
- (enum EMLAccountStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getExternalAccountId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlasticExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPlasticEnabled SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getMDESConfigId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountSummaryRequest")
@interface EMLAccountSummaryRequest : NSObject
@property (nonatomic, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountSummaryResponse")
@interface EMLAccountSummaryResponse : NSObject
@property (nonatomic, strong) EMLAccountStatusModel * _Nonnull status;
@property (nonatomic) NSError * _Nullable error;
- (nonnull instancetype)initWithStatus:(EMLAccountStatusModel * _Nonnull)status error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EMLTokenStatus : NSInteger;

SWIFT_PROTOCOL_NAMED("EMLAccountTokensEntity")
@protocol EMLAccountTokensEntity
- (NSString * _Nonnull)getPanUniqueReference SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getWallet SWIFT_WARN_UNUSED_RESULT;
- (enum EMLTokenStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLAccountTokensModel")
@interface EMLAccountTokensModel : NSObject <EMLAccountTokensEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getPanUniqueReference SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getWallet SWIFT_WARN_UNUSED_RESULT;
- (enum EMLTokenStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountUpdate")
@interface EMLAccountUpdate : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable mobile;
@property (nonatomic, readonly, copy) NSString * _Nullable dob;
@property (nonatomic, readonly, copy) NSString * _Nullable address1;
@property (nonatomic, readonly, copy) NSString * _Nullable address2;
@property (nonatomic, readonly, copy) NSString * _Nullable city;
@property (nonatomic, readonly, copy) NSString * _Nullable state;
@property (nonatomic, readonly, copy) NSString * _Nullable postcode;
@property (nonatomic, readonly, copy) NSString * _Nullable country;
- (nonnull instancetype)initWithFirstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName email:(NSString * _Nullable)email mobile:(NSString * _Nullable)mobile dob:(NSString * _Nullable)dob address1:(NSString * _Nullable)address1 address2:(NSString * _Nullable)address2 city:(NSString * _Nullable)city state:(NSString * _Nullable)state postcode:(NSString * _Nullable)postcode country:(NSString * _Nullable)country OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAddToWalletRequest")
@interface EMLAddToWalletRequest : NSObject
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
@property (nonatomic, readonly, copy) NSString * _Nonnull cardName;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card cardName:(NSString * _Nonnull)cardName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAdditionalUserInfo")
@interface EMLAdditionalUserInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable address1;
@property (nonatomic, readonly, copy) NSString * _Nullable address2;
@property (nonatomic, readonly, copy) NSString * _Nullable city;
@property (nonatomic, readonly, copy) NSString * _Nullable state;
@property (nonatomic, readonly, copy) NSString * _Nullable postcode;
@property (nonatomic, readonly, copy) NSString * _Nullable country;
- (nonnull instancetype)initWithFirstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName email:(NSString * _Nullable)email address1:(NSString * _Nullable)address1 address2:(NSString * _Nullable)address2 city:(NSString * _Nullable)city state:(NSString * _Nullable)state postcode:(NSString * _Nullable)postcode country:(NSString * _Nullable)country OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("EMLAddressEntity")
@protocol EMLAddressEntity
- (NSString * _Nonnull)getBuilding SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine3 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSuburb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCity SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPostCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getState SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCountry SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLAddressModel")
@interface EMLAddressModel : NSObject <EMLAddressEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getBuilding SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine3 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSuburb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCity SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPostCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getState SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCountry SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAgreement")
@interface EMLAgreement : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLCardActivationRequest")
@interface EMLCardActivationRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull activationCode;
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card activationCode:(NSString * _Nonnull)activationCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLCardActivationResponse")
@interface EMLCardActivationResponse : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly, copy) NSString * _Nullable errorMessage;
- (nonnull instancetype)initWithSuccess:(BOOL)success errorMessage:(NSString * _Nullable)errorMessage OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;
@class NSURL;
@class UIColor;

SWIFT_CLASS_NAMED("EMLCardDisplayEntity")
@interface EMLCardDisplayEntity : NSObject
- (nonnull instancetype)initWithCardImage:(UIImage * _Nullable)cardImage cardImageURL:(NSURL * _Nullable)cardImageURL accentColor:(UIColor * _Nonnull)accentColor cardForegroundTextColor:(UIColor * _Nonnull)cardForegroundTextColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EMLProcessor : NSInteger;

SWIFT_CLASS_NAMED("EMLCardModel")
@interface EMLCardModel : NSObject <NSCoding>
@property (nonatomic, copy) NSString * _Nonnull externalAccountId;
@property (nonatomic, copy) NSString * _Nonnull companyId;
@property (nonatomic, copy) NSString * _Nullable mdesConfigId;
@property (nonatomic) enum EMLProcessor processor;
- (nonnull instancetype)initWithExternalAccountId:(NSString * _Nonnull)externalAccountId companyId:(NSString * _Nonnull)companyId mdesConfigId:(NSString * _Nullable)mdesConfigId processor:(enum EMLProcessor)processor OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, NSString *> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLCardNotPresentDetails")
@interface EMLCardNotPresentDetails : NSObject
@property (nonatomic, copy) NSString * _Nonnull cardNumber;
@property (nonatomic, copy) NSString * _Nonnull expiry;
@property (nonatomic, copy) NSString * _Nonnull cvv;
@property (nonatomic, copy) NSString * _Nullable eaid;
- (nonnull instancetype)initWithCardNumber:(NSString * _Nonnull)cardNumber expiry:(NSString * _Nonnull)expiry cvv:(NSString * _Nonnull)cvv eaid:(NSString * _Nullable)eaid OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EMLPassportModel;

SWIFT_PROTOCOL_NAMED("EMLClientEntity")
@protocol EMLClientEntity
- (NSString * _Nullable)getDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getEmailAddress SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getFirstName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getLastName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMobileNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMiddleName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getSex SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDriversLicenceNumber SWIFT_WARN_UNUSED_RESULT;
- (id <EMLAddressEntity> _Nullable)getAddress SWIFT_WARN_UNUSED_RESULT;
- (id <EMLAddressEntity> _Nullable)getAlternateAddress SWIFT_WARN_UNUSED_RESULT;
- (EMLPassportModel * _Nullable)getPassport SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLClientModel")
@interface EMLClientModel : NSObject <EMLClientEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getEmailAddress SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getFirstName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getLastName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMobileNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMiddleName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getSex SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDriversLicenceNumber SWIFT_WARN_UNUSED_RESULT;
- (id <EMLAddressEntity> _Nullable)getAddress SWIFT_WARN_UNUSED_RESULT;
- (id <EMLAddressEntity> _Nullable)getAlternateAddress SWIFT_WARN_UNUSED_RESULT;
- (EMLPassportModel * _Nullable)getPassport SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol EMLTextEntity;
@protocol EMLLinkEntity;

SWIFT_PROTOCOL_NAMED("EMLConfigEntity")
@protocol EMLConfigEntity
- (NSInteger)getMinApiVersion SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getTermsVersion SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <EMLTextEntity>> * _Nullable)getTerms SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <EMLTextEntity>> * _Nonnull)getFaqs SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <EMLLinkEntity>> * _Nonnull)getSupportLinks SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSupportTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlayStoreUrl SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppStoreUrl SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getHideManagePin SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsGiftCard SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getCardArtBaseUrl SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsSmsEnabled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getShowCardDetailsButton SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPasswordless SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPlasticClaimable SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getShowExtraTerms SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getShowCardholderAgreement SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, EMLAgreement *> * _Nullable)getCardholderAgreements SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, NSArray<EMLAgreement *> *> * _Nullable)getExtraTerms SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)getLeClients SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)getMeClients SWIFT_WARN_UNUSED_RESULT;
@end

@class EMLOffer;

SWIFT_CLASS_NAMED("EMLCurrentLogin")
@interface EMLCurrentLogin : NSObject
@property (nonatomic, readonly, copy) NSArray<EMLCardModel *> * _Nonnull cards;
@property (nonatomic, readonly, copy) NSArray<EMLOffer *> * _Nonnull offers;
@property (nonatomic, readonly, copy) NSString * _Nullable currentId;
@property (nonatomic, readonly) BOOL termsConfirmed;
- (nonnull instancetype)initWithCards:(NSArray<EMLCardModel *> * _Nonnull)cards offers:(NSArray<EMLOffer *> * _Nonnull)offers currentId:(NSString * _Nullable)currentId termsConfirmed:(BOOL)termsConfirmed OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EMLDeactivationReasonCode : NSInteger;

SWIFT_CLASS_NAMED("EMLDeactivateCardRequest")
@interface EMLDeactivateCardRequest : NSObject
@property (nonatomic, readonly) enum EMLDeactivationReasonCode reasonCode;
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card reasonCode:(enum EMLDeactivationReasonCode)reasonCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLDeactivateCardResponse")
@interface EMLDeactivateCardResponse : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly) NSError * _Nullable error;
- (nonnull instancetype)initWithSuccess:(BOOL)success error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLDeactivationReasonCode, "EMLDeactivationReasonCode", open) {
  EMLDeactivationReasonCodeInactive = 3,
  EMLDeactivationReasonCodeClosedCancelled = 5,
  EMLDeactivationReasonCodeLostStolen = 31,
};


SWIFT_CLASS_NAMED("EMLDisplayModel")
@interface EMLDisplayModel : NSObject
@property (nonatomic, readonly, strong) UIColor * _Nonnull accentColor;
- (nonnull instancetype)initWithAccentColor:(UIColor * _Nonnull)accentColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLErrorModel")
@interface EMLErrorModel : NSObject
- (NSString * _Nonnull)getCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getExtraInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("EMLFreeTextEntity")
@protocol EMLFreeTextEntity
- (NSString * _Nullable)getText1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText3 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText4 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText5 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText6 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText7 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText8 SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getInt1 SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getInt2 SWIFT_WARN_UNUSED_RESULT;
- (double)getDec1 SWIFT_WARN_UNUSED_RESULT;
- (double)getDec2 SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLFreeTextModel")
@interface EMLFreeTextModel : NSObject <EMLFreeTextEntity>
- (NSString * _Nullable)getText1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText3 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText4 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText5 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText6 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText7 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText8 SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getInt1 SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getInt2 SWIFT_WARN_UNUSED_RESULT;
- (double)getDec1 SWIFT_WARN_UNUSED_RESULT;
- (double)getDec2 SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLGetWalletStatusRequest")
@interface EMLGetWalletStatusRequest : NSObject
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("EMLLinkEntity")
@protocol EMLLinkEntity
- (NSString * _Nonnull)getLabel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDestination SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getType SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLLinkModel")
@interface EMLLinkModel : NSObject <EMLLinkEntity>
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label destination:(NSString * _Nonnull)destination type:(NSString * _Nonnull)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getLabel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDestination SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLLoginRequest")
@interface EMLLoginRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull username;
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
@property (nonatomic, readonly) BOOL keepMeLoggedIn;
- (nonnull instancetype)initWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password keepLoggedIn:(BOOL)keepLoggedIn OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLLoginResponse")
@interface EMLLoginResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<EMLCardModel *> * _Nonnull cards;
@property (nonatomic, copy) NSArray<EMLOffer *> * _Nonnull offers;
@property (nonatomic, readonly, copy) NSString * _Nullable errorMessage;
@property (nonatomic, readonly) BOOL termsConfirmed;
- (nonnull instancetype)initWithCards:(NSArray<EMLCardModel *> * _Nonnull)cards errorMessage:(NSString * _Nullable)errorMessage offers:(NSArray<EMLOffer *> * _Nonnull)offers termsConfirmed:(BOOL)termsConfirmed OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLManagePinDataModel")
@interface EMLManagePinDataModel : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable otpString;
@property (nonatomic, readonly, copy) NSString * _Nullable operationId;
@property (nonatomic, readonly, copy) NSString * _Nullable deviceId;
@property (nonatomic, readonly, copy) NSString * _Nullable eaid;
@property (nonatomic, readonly, copy) NSString * _Nullable cid;
@property (nonatomic, readonly, copy) NSString * _Nullable pin;
@property (nonatomic, readonly, copy) NSString * _Nonnull commMethod;
@property (nonatomic, readonly, copy) NSString * _Nullable processor;
- (nonnull instancetype)initWithDeviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor otpString:(NSString * _Nonnull)otpString operationId:(NSString * _Nonnull)operationId pin:(NSString * _Nonnull)pin OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSDate;

SWIFT_CLASS_NAMED("EMLOffer")
@interface EMLOffer : NSObject <NSCoding>
@property (nonatomic, readonly, copy) NSString * _Nonnull offerId;
@property (nonatomic, readonly, copy) NSString * _Nonnull companyId;
@property (nonatomic, readonly, copy) NSString * _Nullable mdesConfigId;
@property (nonatomic, readonly) enum EMLProcessor processor;
@property (nonatomic, readonly, strong) Currency * _Nonnull value;
@property (nonatomic, readonly, copy) NSDate * _Nullable exp;
- (nonnull instancetype)initWithOfferId:(NSString * _Nonnull)offerId companyId:(NSString * _Nonnull)companyId mdesConfigId:(NSString * _Nullable)mdesConfigId processor:(enum EMLProcessor)processor value:(Currency * _Nonnull)value exp:(NSDate * _Nullable)exp OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLPassportModel")
@interface EMLPassportModel : NSObject
@property (nonatomic, copy) NSString * _Nullable number;
@property (nonatomic, copy) NSString * _Nullable issuingCountry;
@property (nonatomic, copy) NSDate * _Nullable expiry;
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLPasswordResetRequest")
@interface EMLPasswordResetRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull phoneNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable verificationCode;
@property (nonatomic, readonly, copy) NSString * _Nullable password;
- (nonnull instancetype)initWithPhoneNumber:(NSString * _Nonnull)phoneNumber verificationCode:(NSString * _Nullable)verificationCode password:(NSString * _Nullable)password OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLPasswordResetResponse")
@interface EMLPasswordResetResponse : NSObject
@property (nonatomic, readonly) BOOL codeRequired;
@property (nonatomic, readonly) BOOL passwordRequired;
@property (nonatomic, readonly, copy) NSArray<EMLCardModel *> * _Nullable cards;
@property (nonatomic, readonly, copy) NSArray<EMLOffer *> * _Nullable offers;
@property (nonatomic, readonly) BOOL termsConfirmed;
- (nonnull instancetype)initWithCodeRequired:(BOOL)codeRequired passwordRequired:(BOOL)passwordRequired cards:(NSArray<EMLCardModel *> * _Nullable)cards offers:(NSArray<EMLOffer *> * _Nullable)offers termsConfirmed:(BOOL)termsConfirmed OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, EMLPinAccess, open) {
  EMLPinAccessNotApplicable = 0,
  EMLPinAccessSetPin = 1,
  EMLPinAccessShowPin = 2,
};


SWIFT_CLASS_NAMED("EMLPlasticActivationRequest")
@interface EMLPlasticActivationRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull activationCode;
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card activationCode:(NSString * _Nonnull)activationCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLProcessor, "EMLProcessor", open) {
  EMLProcessorAu = 0,
  EMLProcessorUs = 1,
};


SWIFT_CLASS_NAMED("EMLRedeemGiftCardRequest")
@interface EMLRedeemGiftCardRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull phoneNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull activationCode;
@property (nonatomic, readonly, copy) NSString * _Nullable password;
- (nonnull instancetype)initWithPhoneNumber:(NSString * _Nonnull)phoneNumber activationCode:(NSString * _Nonnull)activationCode password:(NSString * _Nullable)password OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLRedeemGiftCardResponse")
@interface EMLRedeemGiftCardResponse : NSObject
@property (nonatomic, readonly) BOOL passwordRequired;
@property (nonatomic, readonly, copy) NSString * _Nullable accessToken;
@property (nonatomic, readonly, copy) NSArray<EMLCardModel *> * _Nullable cards;
@property (nonatomic, readonly, strong) EMLCardModel * _Nullable current;
@property (nonatomic, readonly, copy) NSString * _Nullable currentId;
@property (nonatomic, readonly, copy) NSArray<EMLOffer *> * _Nonnull offers;
@property (nonatomic, readonly) BOOL additionalInformationRequired;
@property (nonatomic, readonly) BOOL termsConfirmed;
- (nonnull instancetype)initWithPasswordRequired:(BOOL)passwordRequired accessToken:(NSString * _Nullable)accessToken cards:(NSArray<EMLCardModel *> * _Nullable)cards current:(EMLCardModel * _Nullable)current currentId:(NSString * _Nullable)currentId offers:(NSArray<EMLOffer *> * _Nonnull)offers additionalInformationRequired:(BOOL)additionalInformationRequired termsConfirmed:(BOOL)termsConfirmed OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLRedeemGiftCardViewModel")
@interface EMLRedeemGiftCardViewModel : NSObject
@property (nonatomic, readonly) BOOL passwordRequired;
@property (nonatomic, readonly) NSError * _Nullable error;
@property (nonatomic, readonly, strong) EMLCardModel * _Nullable currentCard;
- (nonnull instancetype)initWithPasswordRequired:(BOOL)passwordRequired currentCard:(EMLCardModel * _Nullable)currentCard error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EMLTransactionsRequestModel;
@class EMLTransactionsResponseModel;
@class ManagePinDisplayRequest;
@class UIViewController;
enum EMLWalletStatus : NSInteger;
@class EMLShowCardNotPresentDetailsRequest;

SWIFT_PROTOCOL_NAMED("EMLStoreProtocol")
@protocol EMLStoreProtocol
- (void)setAuthenticationTokenWithToken:(NSString * _Nonnull)token username:(NSString * _Nullable)username onComplete:(void (^ _Nonnull)(void))onComplete;
- (void)logoutOnComplete:(void (^ _Nullable)(void))onComplete;
- (BOOL)isLoggedIn SWIFT_WARN_UNUSED_RESULT;
- (void)activateWithRequest:(EMLCardActivationRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)deactivateWithRequest:(EMLDeactivateCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)activatePlasticWithRequest:(EMLPlasticActivationRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getTransactionHistoryWithRequest:(EMLTransactionsRequestModel * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLTransactionsResponseModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showUpdatePinWithRequest:(ManagePinDisplayRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showPinWithCard:(EMLCardModel * _Nonnull)card displayOptions:(EMLCardDisplayEntity * _Nonnull)displayOptions presentingViewController:(UIViewController * _Nonnull)presentingViewController onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getWalletStatusWithRequest:(EMLGetWalletStatusRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(enum EMLWalletStatus))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)addCardToWalletWithRequest:(EMLAddToWalletRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(enum EMLWalletStatus))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getAccountSummaryWithRequest:(EMLAccountSummaryRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLAccountStatusModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getAccountDetailsWithRequest:(EMLAccountDetailsRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLAccountDetailsModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull, NSString * _Nonnull))onError;
/// Update details against the given account
/// \param card card for account
///
/// \param accountUpdateDetails Details of changes
///
/// \param onComplete called on success
///
/// \param onError called if an error occurs
///
- (void)updateAccountDetailsWithCard:(EMLCardModel * _Nonnull)card accountUpdateDetails:(EMLAccountUpdate * _Nonnull)accountUpdateDetails onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showCardNotPresentDetailsWithRequest:(EMLShowCardNotPresentDetailsRequest * _Nonnull)request;
- (NSString * _Nullable)getCurrentUsername SWIFT_WARN_UNUSED_RESULT;
- (NSArray<EMLCardModel *> * _Nonnull)getCurrentCards SWIFT_WARN_UNUSED_RESULT;
- (NSArray<EMLOffer *> * _Nonnull)getCurrentOffers SWIFT_WARN_UNUSED_RESULT;
- (void)loginWithRequest:(EMLLoginRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLLoginResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)redeemGiftCardWithRequest:(EMLRedeemGiftCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLRedeemGiftCardResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)checkClaimWithRequest:(EMLRedeemGiftCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLOffer * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)addPlasticWithPhone:(NSString * _Nonnull)phone searchParam:(NSString * _Nonnull)searchParam securityCode:(NSString * _Nullable)securityCode processor:(enum EMLProcessor)processor password:(NSString * _Nullable)password additionalUserInfo:(EMLAdditionalUserInfo * _Nullable)additionalUserInfo onComplete:(void (^ _Nonnull)(EMLRedeemGiftCardResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)redeemOfferWithId:(NSString * _Nonnull)id onComplete:(void (^ _Nonnull)(EMLCurrentLogin * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)resetPasswordWithRequest:(EMLPasswordResetRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLPasswordResetResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)isUpdateRequiredOnComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getConfigOnComplete:(void (^ _Nonnull)(id <EMLConfigEntity> _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)acceptTermsOnComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)acceptExtraTermsOnComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)isNewTermsOnComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
@end

enum EMLSDKEnvironment : NSInteger;

SWIFT_CLASS_NAMED("EMLSDK")
@interface EMLSDK : NSObject <EMLStoreProtocol>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) EMLSDK * _Nonnull shared;)
+ (EMLSDK * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(EMLSDK * _Nonnull)value;
@property (nonatomic) BOOL isTesting;
- (enum EMLSDKEnvironment)getSDKEnvironment SWIFT_WARN_UNUSED_RESULT;
- (void)configureWithSubscriptionKey:(NSString * _Nonnull)subscriptionKey environment:(enum EMLSDKEnvironment)environment debug:(BOOL)debug applicationKeyId:(NSString * _Nullable)applicationKeyId applicationKeySecret:(NSString * _Nullable)applicationKeySecret;
- (NSString * _Nullable)getCurrentUsername SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isLoggedIn SWIFT_WARN_UNUSED_RESULT;
- (NSArray<EMLCardModel *> * _Nonnull)getCurrentCards SWIFT_WARN_UNUSED_RESULT;
- (NSArray<EMLOffer *> * _Nonnull)getCurrentOffers SWIFT_WARN_UNUSED_RESULT;
- (void)setAuthenticationTokenWithToken:(NSString * _Nonnull)token username:(NSString * _Nullable)username onComplete:(void (^ _Nonnull)(void))onComplete;
- (void)loginWithRequest:(EMLLoginRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLLoginResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)logoutOnComplete:(void (^ _Nullable)(void))onComplete;
- (void)getAccountSummaryWithRequest:(EMLAccountSummaryRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLAccountStatusModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getAccountDetailsWithRequest:(EMLAccountDetailsRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLAccountDetailsModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull, NSString * _Nonnull))onError;
- (void)updateAccountDetailsWithCard:(EMLCardModel * _Nonnull)card accountUpdateDetails:(EMLAccountUpdate * _Nonnull)accountUpdateDetails onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)activateWithRequest:(EMLCardActivationRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)deactivateWithRequest:(EMLDeactivateCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)activatePlasticWithRequest:(EMLPlasticActivationRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getConfigOnComplete:(void (^ _Nonnull)(id <EMLConfigEntity> _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getTransactionHistoryWithOffset:(NSInteger)offset limit:(NSInteger)limit days:(NSInteger)days includeDiscount:(BOOL)includeDiscount onComplete:(void (^ _Nonnull)(EMLTransactionsResponseModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getTransactionHistoryWithRequest:(EMLTransactionsRequestModel * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLTransactionsResponseModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showUpdatePinWithRequest:(ManagePinDisplayRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showPinWithCard:(EMLCardModel * _Nonnull)card displayOptions:(EMLCardDisplayEntity * _Nonnull)displayOptions presentingViewController:(UIViewController * _Nonnull)presentingViewController onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getWalletStatusWithRequest:(EMLGetWalletStatusRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(enum EMLWalletStatus))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)addCardToWalletWithRequest:(EMLAddToWalletRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(enum EMLWalletStatus))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)acceptTermsOnComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)acceptExtraTermsOnComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)isNewTermsOnComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)redeemGiftCardWithRequest:(EMLRedeemGiftCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLRedeemGiftCardResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)checkClaimWithRequest:(EMLRedeemGiftCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLOffer * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)addPlasticWithPhone:(NSString * _Nonnull)phone searchParam:(NSString * _Nonnull)searchParam securityCode:(NSString * _Nullable)securityCode processor:(enum EMLProcessor)processor password:(NSString * _Nullable)password additionalUserInfo:(EMLAdditionalUserInfo * _Nullable)additionalUserInfo onComplete:(void (^ _Nonnull)(EMLRedeemGiftCardResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)redeemOfferWithId:(NSString * _Nonnull)id onComplete:(void (^ _Nonnull)(EMLCurrentLogin * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showCardNotPresentDetailsWithRequest:(EMLShowCardNotPresentDetailsRequest * _Nonnull)request;
- (void)getCardNotPresentDetailsWithCard:(EMLCardModel * _Nonnull)card onComplete:(void (^ _Nonnull)(EMLCardNotPresentDetails * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)resetPasswordWithRequest:(EMLPasswordResetRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLPasswordResetResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)isUpdateRequiredOnComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLSDKEnvironment, "EMLSDKEnvironment", open) {
  EMLSDKEnvironmentBeta = 0,
  EMLSDKEnvironmentPreProd = 1,
  EMLSDKEnvironmentProd = 2,
};


SWIFT_CLASS_NAMED("EMLShowCardNotPresentDetailsRequest")
@interface EMLShowCardNotPresentDetailsRequest : NSObject
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card displayOptions:(EMLCardDisplayEntity * _Nonnull)displayOptions OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLShowPinError")
@interface EMLShowPinError : NSObject
@property (nonatomic, readonly, strong) EMLErrorModel * _Nonnull error;
@property (nonatomic, readonly) BOOL refreshAuth;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("EMLStateEntity")
@protocol EMLStateEntity
- (NSInteger)getCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isActive SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLegacyCode SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL_NAMED("EMLTextEntity")
@protocol EMLTextEntity
- (NSString * _Nonnull)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLTextModel")
@interface EMLTextModel : NSObject <EMLTextEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title description:(NSString * _Nonnull)description OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLTokenStatus, "EMLTokenStatus", open) {
  EMLTokenStatusActive = 0,
  EMLTokenStatusUnmapped = 1,
  EMLTokenStatusSuspended = 2,
  EMLTokenStatusUnknown = 3,
};


SWIFT_PROTOCOL_NAMED("EMLTransactionEntity")
@protocol EMLTransactionEntity
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getParentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTypeId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTypeDescription SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nonnull)getDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nonnull)getBaseAmount SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nullable)getRunningBalance SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nullable)getFeeTotal SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getMccCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCategory SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLTransactionModel")
@interface EMLTransactionModel : NSObject <EMLTransactionEntity>
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable parentId;
@property (nonatomic, readonly, copy) NSString * _Nullable typeId;
@property (nonatomic, readonly, copy) NSString * _Nullable typeDescription;
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nonnull desc;
@property (nonatomic, readonly, strong) Currency * _Nonnull baseAmount;
@property (nonatomic, readonly, strong) Currency * _Nullable runningBalance;
@property (nonatomic, readonly, strong) Currency * _Nullable feeTotal;
@property (nonatomic, readonly) NSInteger mccCode;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, strong) Currency * _Nullable discountAmount;
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getParentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTypeId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTypeDescription SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nonnull)getDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nonnull)getBaseAmount SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nullable)getRunningBalance SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nullable)getFeeTotal SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getMccCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCategory SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLTransactionsRequestModel")
@interface EMLTransactionsRequestModel : NSObject
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
@property (nonatomic, readonly) NSInteger offset;
@property (nonatomic, readonly) NSInteger limit;
@property (nonatomic, readonly, copy) NSDate * _Nullable startDate;
@property (nonatomic, readonly, copy) NSDate * _Nullable endDate;
@property (nonatomic, readonly) BOOL includeDiscount;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card offset:(NSInteger)offset limit:(NSInteger)limit startDate:(NSDate * _Nullable)startDate endDate:(NSDate * _Nullable)endDate includeDiscount:(BOOL)includeDiscount OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLTransactionsResponseModel")
@interface EMLTransactionsResponseModel : NSObject
- (NSArray<id <EMLTransactionEntity>> * _Nonnull)getTransactions SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getResultsCount SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getTotalCount SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getResultsOffset SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithTransactions:(NSArray<EMLTransactionModel *> * _Nonnull)transactions resultsCount:(NSInteger)resultsCount totalCount:(NSInteger)totalCount externalAccountId:(NSString * _Nonnull)externalAccountId resultsOffset:(NSInteger)resultsOffset OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLWalletStatus, "EMLWalletStatus", open) {
  EMLWalletStatusUnavailable = 0,
  EMLWalletStatusAvailable = 1,
  EMLWalletStatusCancelled = 2,
  EMLWalletStatusAdded = 3,
};


SWIFT_CLASS_NAMED("EmlApiException")
@interface EmlApiException : NSObject
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode model:(EMLErrorModel * _Nonnull)model OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)getStatusCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS_NAMED("EmlPinException")
@interface EmlPinException : EmlApiException
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode model:(EMLErrorModel * _Nonnull)model cancelled:(BOOL)cancelled unauthorized:(BOOL)unauthorized forceLogout:(BOOL)forceLogout offerRetry:(BOOL)offerRetry OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode message:(NSString * _Nonnull)message cancelled:(BOOL)cancelled unauthorized:(BOOL)unauthorized forceLogout:(BOOL)forceLogout offerRetry:(BOOL)offerRetry OBJC_DESIGNATED_INITIALIZER;
- (BOOL)getCancelled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getUnauthorized SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getGorceLogout SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode model:(EMLErrorModel * _Nonnull)model SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode message:(NSString * _Nonnull)message SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("FetchTermsRequest")
@interface FetchTermsRequest : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("FetchTermsResponse")
@interface FetchTermsResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9EMLiOSSDK19FetchTermsViewModel")
@interface FetchTermsViewModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinDisplayRequest")
@interface ManagePinDisplayRequest : NSObject
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card displayOptions:(EMLDisplayModel * _Nonnull)displayOptions OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinExecuteRequest")
@interface ManagePinExecuteRequest : NSObject
- (nonnull instancetype)initWithOtpString:(NSString * _Nonnull)otpString operationId:(NSString * _Nonnull)operationId pin:(NSString * _Nonnull)pin deviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinInitiateRequest")
@interface ManagePinInitiateRequest : NSObject
- (nonnull instancetype)initWithDeviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinInitiateResponse")
@interface ManagePinInitiateResponse : NSObject
- (nonnull instancetype)initWithOperationId:(NSString * _Nonnull)operationId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinUpdateRequest")
@interface ManagePinUpdateRequest : NSObject
- (nonnull instancetype)initWithDeviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinUpdateResponse")
@interface ManagePinUpdateResponse : NSObject
- (nonnull instancetype)initWithPhoneNumber:(NSString * _Nonnull)phoneNumber emailAddress:(NSString * _Nonnull)emailAddress OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinValidateRequest")
@interface ManagePinValidateRequest : NSObject
- (nonnull instancetype)initWithOtpString:(NSString * _Nonnull)otpString operationId:(NSString * _Nonnull)operationId deviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef EMLIOSSDK_SWIFT_H
#define EMLIOSSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="EMLiOSSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;

SWIFT_CLASS_NAMED("AcceptEMLTermsRequest")
@interface AcceptEMLTermsRequest : NSObject
@property (nonatomic, readonly) NSInteger version;
- (nonnull instancetype)initWithVersion:(NSInteger)version OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("AcceptTermsResponse")
@interface AcceptTermsResponse : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly) NSError * _Nullable error;
- (nonnull instancetype)initWithSuccess:(BOOL)success error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, AddressDisplayType, open) {
  AddressDisplayTypeReadWrite = 0,
  AddressDisplayTypeRead = 1,
  AddressDisplayTypeNotDisplayed = 2,
};


SWIFT_CLASS_NAMED("CheckEMLTermsAcceptedRequest")
@interface CheckEMLTermsAcceptedRequest : NSObject
@property (nonatomic, readonly) NSInteger version;
- (nonnull instancetype)initWithVersion:(NSInteger)version OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("CheckEMLTermsAcceptedResponse")
@interface CheckEMLTermsAcceptedResponse : NSObject
@property (nonatomic, readonly) BOOL accepted;
@property (nonatomic, readonly) NSError * _Nullable error;
- (nonnull instancetype)initWithAccepted:(BOOL)accepted error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
@class NSCoder;

SWIFT_CLASS_NAMED("Currency")
@interface Currency : NSObject <NSCoding>
@property (nonatomic, readonly, copy) NSString * _Nullable currencyCode;
@property (nonatomic, readonly, strong) NSNumber * _Nullable amountObjc;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EMLCardModel;

SWIFT_CLASS_NAMED("EMLAccountCardTokenRequest")
@interface EMLAccountCardTokenRequest : NSObject
@property (nonatomic, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EMLAccountTokensModel;

SWIFT_CLASS_NAMED("EMLAccountCardTokenResponse")
@interface EMLAccountCardTokenResponse : NSObject
@property (nonatomic, copy) NSArray<EMLAccountTokensModel *> * _Nullable tokens;
- (nonnull instancetype)initWithTokens:(NSArray<EMLAccountTokensModel *> * _Nonnull)tokens OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol EMLAccountEntity;

SWIFT_PROTOCOL_NAMED("EMLAccountDetailsEntity")
@protocol EMLAccountDetailsEntity
- (id <EMLAccountEntity> _Nonnull)getAccount SWIFT_WARN_UNUSED_RESULT;
@end

@class EMLAccountModel;
@class EMLClientModel;

SWIFT_CLASS_NAMED("EMLAccountDetailsModel")
@interface EMLAccountDetailsModel : NSObject <EMLAccountDetailsEntity>
- (nonnull instancetype)initWithAccount:(EMLAccountModel * _Nonnull)account client:(EMLClientModel * _Nullable)client OBJC_DESIGNATED_INITIALIZER;
- (id <EMLAccountEntity> _Nonnull)getAccount SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountDetailsRequest")
@interface EMLAccountDetailsRequest : NSObject
@property (nonatomic) BOOL withClient;
@property (nonatomic) BOOL withFreeText;
@property (nonatomic, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card withClient:(BOOL)withClient withFreeText:(BOOL)withFreeText OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountDetailsResponse")
@interface EMLAccountDetailsResponse : NSObject
@property (nonatomic, strong) EMLAccountDetailsModel * _Nonnull details;
@property (nonatomic) NSError * _Nullable error;
- (nonnull instancetype)initWithDetails:(EMLAccountDetailsModel * _Nonnull)details error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EMLAccountStatus : NSInteger;

SWIFT_PROTOCOL_NAMED("EMLAccountStatusEntity")
@protocol EMLAccountStatusEntity
- (Currency * _Nonnull)getBalance SWIFT_WARN_UNUSED_RESULT;
- (enum EMLAccountStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getExternalAccountId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlasticExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPlasticEnabled SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getMDESConfigId SWIFT_WARN_UNUSED_RESULT;
@end

@protocol EMLFreeTextEntity;

SWIFT_PROTOCOL_NAMED("EMLAccountEntity")
@protocol EMLAccountEntity <EMLAccountStatusEntity>
- (NSString * _Nonnull)getCardNumber SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCompliant SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getNameOnCard SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDisplayName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAccountExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlasticExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (id <EMLFreeTextEntity> _Nullable)getFreeText SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLAccountModel")
@interface EMLAccountModel : NSObject <EMLAccountEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getExternalAccountId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlasticExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCompliant SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getNameOnCard SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDisplayName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAccountExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nonnull)getBalance SWIFT_WARN_UNUSED_RESULT;
- (enum EMLAccountStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPlasticEnabled SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getMDESConfigId SWIFT_WARN_UNUSED_RESULT;
- (id <EMLFreeTextEntity> _Nullable)getFreeText SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLAccountStatus, "EMLAccountStatus", open) {
  EMLAccountStatusPreActive = 1,
  EMLAccountStatusActive = 2,
  EMLAccountStatusInactive = 3,
  EMLAccountStatusExpired = 4,
  EMLAccountStatusClosed = 5,
  EMLAccountStatusEmlInactive = 11,
  EMLAccountStatusInactivePinTriesExceeded = 20,
  EMLAccountStatusLostStolen = 31,
  EMLAccountStatusSuspectedFraud = 32,
  EMLAccountStatusDeactivated = 41,
  EMLAccountStatusReplaced = 42,
  EMLAccountStatusLocked = 43,
  EMLAccountStatusUnknown = 0,
};


enum EMLPinAccess : NSInteger;

SWIFT_CLASS_NAMED("EMLAccountStatusModel")
@interface EMLAccountStatusModel : NSObject <EMLAccountStatusEntity>
- (nonnull instancetype)initWithBalance:(Currency * _Nonnull)balance status:(enum EMLAccountStatus)status externalAccountId:(NSString * _Nonnull)externalAccountId cardNumber:(NSString * _Nonnull)cardNumber plasticExpirationDate:(NSString * _Nonnull)plasticExpirationDate isPlasticEnabled:(BOOL)isPlasticEnabled mdesConfigId:(NSString * _Nonnull)mdesConfigId addressDisplayType:(enum AddressDisplayType)addressDisplayType addressRegistrationRequired:(BOOL)addressRegistrationRequired pinEnabled:(BOOL)pinEnabled pinMode:(enum EMLPinAccess)pinMode OBJC_DESIGNATED_INITIALIZER;
- (Currency * _Nonnull)getBalance SWIFT_WARN_UNUSED_RESULT;
- (enum EMLAccountStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getExternalAccountId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCardNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlasticExpirationDate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPlasticEnabled SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getMDESConfigId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountSummaryRequest")
@interface EMLAccountSummaryRequest : NSObject
@property (nonatomic, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountSummaryResponse")
@interface EMLAccountSummaryResponse : NSObject
@property (nonatomic, strong) EMLAccountStatusModel * _Nonnull status;
@property (nonatomic) NSError * _Nullable error;
- (nonnull instancetype)initWithStatus:(EMLAccountStatusModel * _Nonnull)status error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EMLTokenStatus : NSInteger;

SWIFT_PROTOCOL_NAMED("EMLAccountTokensEntity")
@protocol EMLAccountTokensEntity
- (NSString * _Nonnull)getPanUniqueReference SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getWallet SWIFT_WARN_UNUSED_RESULT;
- (enum EMLTokenStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLAccountTokensModel")
@interface EMLAccountTokensModel : NSObject <EMLAccountTokensEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getPanUniqueReference SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getWallet SWIFT_WARN_UNUSED_RESULT;
- (enum EMLTokenStatus)getStatus SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAccountUpdate")
@interface EMLAccountUpdate : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable mobile;
@property (nonatomic, readonly, copy) NSString * _Nullable dob;
@property (nonatomic, readonly, copy) NSString * _Nullable address1;
@property (nonatomic, readonly, copy) NSString * _Nullable address2;
@property (nonatomic, readonly, copy) NSString * _Nullable city;
@property (nonatomic, readonly, copy) NSString * _Nullable state;
@property (nonatomic, readonly, copy) NSString * _Nullable postcode;
@property (nonatomic, readonly, copy) NSString * _Nullable country;
- (nonnull instancetype)initWithFirstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName email:(NSString * _Nullable)email mobile:(NSString * _Nullable)mobile dob:(NSString * _Nullable)dob address1:(NSString * _Nullable)address1 address2:(NSString * _Nullable)address2 city:(NSString * _Nullable)city state:(NSString * _Nullable)state postcode:(NSString * _Nullable)postcode country:(NSString * _Nullable)country OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAddToWalletRequest")
@interface EMLAddToWalletRequest : NSObject
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
@property (nonatomic, readonly, copy) NSString * _Nonnull cardName;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card cardName:(NSString * _Nonnull)cardName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAdditionalUserInfo")
@interface EMLAdditionalUserInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable firstName;
@property (nonatomic, readonly, copy) NSString * _Nullable lastName;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable address1;
@property (nonatomic, readonly, copy) NSString * _Nullable address2;
@property (nonatomic, readonly, copy) NSString * _Nullable city;
@property (nonatomic, readonly, copy) NSString * _Nullable state;
@property (nonatomic, readonly, copy) NSString * _Nullable postcode;
@property (nonatomic, readonly, copy) NSString * _Nullable country;
- (nonnull instancetype)initWithFirstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName email:(NSString * _Nullable)email address1:(NSString * _Nullable)address1 address2:(NSString * _Nullable)address2 city:(NSString * _Nullable)city state:(NSString * _Nullable)state postcode:(NSString * _Nullable)postcode country:(NSString * _Nullable)country OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("EMLAddressEntity")
@protocol EMLAddressEntity
- (NSString * _Nonnull)getBuilding SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine3 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSuburb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCity SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPostCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getState SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCountry SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLAddressModel")
@interface EMLAddressModel : NSObject <EMLAddressEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getBuilding SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLine3 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSuburb SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCity SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPostCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getState SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCountry SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLAgreement")
@interface EMLAgreement : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLCardActivationRequest")
@interface EMLCardActivationRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull activationCode;
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card activationCode:(NSString * _Nonnull)activationCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLCardActivationResponse")
@interface EMLCardActivationResponse : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly, copy) NSString * _Nullable errorMessage;
- (nonnull instancetype)initWithSuccess:(BOOL)success errorMessage:(NSString * _Nullable)errorMessage OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIImage;
@class NSURL;
@class UIColor;

SWIFT_CLASS_NAMED("EMLCardDisplayEntity")
@interface EMLCardDisplayEntity : NSObject
- (nonnull instancetype)initWithCardImage:(UIImage * _Nullable)cardImage cardImageURL:(NSURL * _Nullable)cardImageURL accentColor:(UIColor * _Nonnull)accentColor cardForegroundTextColor:(UIColor * _Nonnull)cardForegroundTextColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EMLProcessor : NSInteger;

SWIFT_CLASS_NAMED("EMLCardModel")
@interface EMLCardModel : NSObject <NSCoding>
@property (nonatomic, copy) NSString * _Nonnull externalAccountId;
@property (nonatomic, copy) NSString * _Nonnull companyId;
@property (nonatomic, copy) NSString * _Nullable mdesConfigId;
@property (nonatomic) enum EMLProcessor processor;
- (nonnull instancetype)initWithExternalAccountId:(NSString * _Nonnull)externalAccountId companyId:(NSString * _Nonnull)companyId mdesConfigId:(NSString * _Nullable)mdesConfigId processor:(enum EMLProcessor)processor OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, NSString *> * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLCardNotPresentDetails")
@interface EMLCardNotPresentDetails : NSObject
@property (nonatomic, copy) NSString * _Nonnull cardNumber;
@property (nonatomic, copy) NSString * _Nonnull expiry;
@property (nonatomic, copy) NSString * _Nonnull cvv;
@property (nonatomic, copy) NSString * _Nullable eaid;
- (nonnull instancetype)initWithCardNumber:(NSString * _Nonnull)cardNumber expiry:(NSString * _Nonnull)expiry cvv:(NSString * _Nonnull)cvv eaid:(NSString * _Nullable)eaid OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EMLPassportModel;

SWIFT_PROTOCOL_NAMED("EMLClientEntity")
@protocol EMLClientEntity
- (NSString * _Nullable)getDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getEmailAddress SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getFirstName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getLastName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMobileNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMiddleName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getSex SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDriversLicenceNumber SWIFT_WARN_UNUSED_RESULT;
- (id <EMLAddressEntity> _Nullable)getAddress SWIFT_WARN_UNUSED_RESULT;
- (id <EMLAddressEntity> _Nullable)getAlternateAddress SWIFT_WARN_UNUSED_RESULT;
- (EMLPassportModel * _Nullable)getPassport SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLClientModel")
@interface EMLClientModel : NSObject <EMLClientEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getDateOfBirth SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getEmailAddress SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getFirstName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getLastName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMobileNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPhoneNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getMiddleName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getSex SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDriversLicenceNumber SWIFT_WARN_UNUSED_RESULT;
- (id <EMLAddressEntity> _Nullable)getAddress SWIFT_WARN_UNUSED_RESULT;
- (id <EMLAddressEntity> _Nullable)getAlternateAddress SWIFT_WARN_UNUSED_RESULT;
- (EMLPassportModel * _Nullable)getPassport SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol EMLTextEntity;
@protocol EMLLinkEntity;

SWIFT_PROTOCOL_NAMED("EMLConfigEntity")
@protocol EMLConfigEntity
- (NSInteger)getMinApiVersion SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getTermsVersion SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <EMLTextEntity>> * _Nullable)getTerms SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <EMLTextEntity>> * _Nonnull)getFaqs SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <EMLLinkEntity>> * _Nonnull)getSupportLinks SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSupportTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPlayStoreUrl SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getAppStoreUrl SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getHideManagePin SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsGiftCard SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getCardArtBaseUrl SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsSmsEnabled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getShowCardDetailsButton SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPasswordless SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getIsPlasticClaimable SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getShowExtraTerms SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getShowCardholderAgreement SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, EMLAgreement *> * _Nullable)getCardholderAgreements SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, NSArray<EMLAgreement *> *> * _Nullable)getExtraTerms SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)getLeClients SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)getMeClients SWIFT_WARN_UNUSED_RESULT;
@end

@class EMLOffer;

SWIFT_CLASS_NAMED("EMLCurrentLogin")
@interface EMLCurrentLogin : NSObject
@property (nonatomic, readonly, copy) NSArray<EMLCardModel *> * _Nonnull cards;
@property (nonatomic, readonly, copy) NSArray<EMLOffer *> * _Nonnull offers;
@property (nonatomic, readonly, copy) NSString * _Nullable currentId;
@property (nonatomic, readonly) BOOL termsConfirmed;
- (nonnull instancetype)initWithCards:(NSArray<EMLCardModel *> * _Nonnull)cards offers:(NSArray<EMLOffer *> * _Nonnull)offers currentId:(NSString * _Nullable)currentId termsConfirmed:(BOOL)termsConfirmed OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum EMLDeactivationReasonCode : NSInteger;

SWIFT_CLASS_NAMED("EMLDeactivateCardRequest")
@interface EMLDeactivateCardRequest : NSObject
@property (nonatomic, readonly) enum EMLDeactivationReasonCode reasonCode;
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card reasonCode:(enum EMLDeactivationReasonCode)reasonCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLDeactivateCardResponse")
@interface EMLDeactivateCardResponse : NSObject
@property (nonatomic, readonly) BOOL success;
@property (nonatomic, readonly) NSError * _Nullable error;
- (nonnull instancetype)initWithSuccess:(BOOL)success error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLDeactivationReasonCode, "EMLDeactivationReasonCode", open) {
  EMLDeactivationReasonCodeInactive = 3,
  EMLDeactivationReasonCodeClosedCancelled = 5,
  EMLDeactivationReasonCodeLostStolen = 31,
};


SWIFT_CLASS_NAMED("EMLDisplayModel")
@interface EMLDisplayModel : NSObject
@property (nonatomic, readonly, strong) UIColor * _Nonnull accentColor;
- (nonnull instancetype)initWithAccentColor:(UIColor * _Nonnull)accentColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLErrorModel")
@interface EMLErrorModel : NSObject
- (NSString * _Nonnull)getCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getExtraInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("EMLFreeTextEntity")
@protocol EMLFreeTextEntity
- (NSString * _Nullable)getText1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText3 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText4 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText5 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText6 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText7 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText8 SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getInt1 SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getInt2 SWIFT_WARN_UNUSED_RESULT;
- (double)getDec1 SWIFT_WARN_UNUSED_RESULT;
- (double)getDec2 SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLFreeTextModel")
@interface EMLFreeTextModel : NSObject <EMLFreeTextEntity>
- (NSString * _Nullable)getText1 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText2 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText3 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText4 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText5 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText6 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText7 SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getText8 SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getInt1 SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getInt2 SWIFT_WARN_UNUSED_RESULT;
- (double)getDec1 SWIFT_WARN_UNUSED_RESULT;
- (double)getDec2 SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLGetWalletStatusRequest")
@interface EMLGetWalletStatusRequest : NSObject
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("EMLLinkEntity")
@protocol EMLLinkEntity
- (NSString * _Nonnull)getLabel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDestination SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getType SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLLinkModel")
@interface EMLLinkModel : NSObject <EMLLinkEntity>
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label destination:(NSString * _Nonnull)destination type:(NSString * _Nonnull)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getLabel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDestination SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLLoginRequest")
@interface EMLLoginRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull username;
@property (nonatomic, readonly, copy) NSString * _Nonnull password;
@property (nonatomic, readonly) BOOL keepMeLoggedIn;
- (nonnull instancetype)initWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password keepLoggedIn:(BOOL)keepLoggedIn OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLLoginResponse")
@interface EMLLoginResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<EMLCardModel *> * _Nonnull cards;
@property (nonatomic, copy) NSArray<EMLOffer *> * _Nonnull offers;
@property (nonatomic, readonly, copy) NSString * _Nullable errorMessage;
@property (nonatomic, readonly) BOOL termsConfirmed;
- (nonnull instancetype)initWithCards:(NSArray<EMLCardModel *> * _Nonnull)cards errorMessage:(NSString * _Nullable)errorMessage offers:(NSArray<EMLOffer *> * _Nonnull)offers termsConfirmed:(BOOL)termsConfirmed OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLManagePinDataModel")
@interface EMLManagePinDataModel : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable otpString;
@property (nonatomic, readonly, copy) NSString * _Nullable operationId;
@property (nonatomic, readonly, copy) NSString * _Nullable deviceId;
@property (nonatomic, readonly, copy) NSString * _Nullable eaid;
@property (nonatomic, readonly, copy) NSString * _Nullable cid;
@property (nonatomic, readonly, copy) NSString * _Nullable pin;
@property (nonatomic, readonly, copy) NSString * _Nonnull commMethod;
@property (nonatomic, readonly, copy) NSString * _Nullable processor;
- (nonnull instancetype)initWithDeviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor otpString:(NSString * _Nonnull)otpString operationId:(NSString * _Nonnull)operationId pin:(NSString * _Nonnull)pin OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSDate;

SWIFT_CLASS_NAMED("EMLOffer")
@interface EMLOffer : NSObject <NSCoding>
@property (nonatomic, readonly, copy) NSString * _Nonnull offerId;
@property (nonatomic, readonly, copy) NSString * _Nonnull companyId;
@property (nonatomic, readonly, copy) NSString * _Nullable mdesConfigId;
@property (nonatomic, readonly) enum EMLProcessor processor;
@property (nonatomic, readonly, strong) Currency * _Nonnull value;
@property (nonatomic, readonly, copy) NSDate * _Nullable exp;
- (nonnull instancetype)initWithOfferId:(NSString * _Nonnull)offerId companyId:(NSString * _Nonnull)companyId mdesConfigId:(NSString * _Nullable)mdesConfigId processor:(enum EMLProcessor)processor value:(Currency * _Nonnull)value exp:(NSDate * _Nullable)exp OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLPassportModel")
@interface EMLPassportModel : NSObject
@property (nonatomic, copy) NSString * _Nullable number;
@property (nonatomic, copy) NSString * _Nullable issuingCountry;
@property (nonatomic, copy) NSDate * _Nullable expiry;
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLPasswordResetRequest")
@interface EMLPasswordResetRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull phoneNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable verificationCode;
@property (nonatomic, readonly, copy) NSString * _Nullable password;
- (nonnull instancetype)initWithPhoneNumber:(NSString * _Nonnull)phoneNumber verificationCode:(NSString * _Nullable)verificationCode password:(NSString * _Nullable)password OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLPasswordResetResponse")
@interface EMLPasswordResetResponse : NSObject
@property (nonatomic, readonly) BOOL codeRequired;
@property (nonatomic, readonly) BOOL passwordRequired;
@property (nonatomic, readonly, copy) NSArray<EMLCardModel *> * _Nullable cards;
@property (nonatomic, readonly, copy) NSArray<EMLOffer *> * _Nullable offers;
@property (nonatomic, readonly) BOOL termsConfirmed;
- (nonnull instancetype)initWithCodeRequired:(BOOL)codeRequired passwordRequired:(BOOL)passwordRequired cards:(NSArray<EMLCardModel *> * _Nullable)cards offers:(NSArray<EMLOffer *> * _Nullable)offers termsConfirmed:(BOOL)termsConfirmed OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, EMLPinAccess, open) {
  EMLPinAccessNotApplicable = 0,
  EMLPinAccessSetPin = 1,
  EMLPinAccessShowPin = 2,
};


SWIFT_CLASS_NAMED("EMLPlasticActivationRequest")
@interface EMLPlasticActivationRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull activationCode;
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card activationCode:(NSString * _Nonnull)activationCode OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLProcessor, "EMLProcessor", open) {
  EMLProcessorAu = 0,
  EMLProcessorUs = 1,
};


SWIFT_CLASS_NAMED("EMLRedeemGiftCardRequest")
@interface EMLRedeemGiftCardRequest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull phoneNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull activationCode;
@property (nonatomic, readonly, copy) NSString * _Nullable password;
- (nonnull instancetype)initWithPhoneNumber:(NSString * _Nonnull)phoneNumber activationCode:(NSString * _Nonnull)activationCode password:(NSString * _Nullable)password OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLRedeemGiftCardResponse")
@interface EMLRedeemGiftCardResponse : NSObject
@property (nonatomic, readonly) BOOL passwordRequired;
@property (nonatomic, readonly, copy) NSString * _Nullable accessToken;
@property (nonatomic, readonly, copy) NSArray<EMLCardModel *> * _Nullable cards;
@property (nonatomic, readonly, strong) EMLCardModel * _Nullable current;
@property (nonatomic, readonly, copy) NSString * _Nullable currentId;
@property (nonatomic, readonly, copy) NSArray<EMLOffer *> * _Nonnull offers;
@property (nonatomic, readonly) BOOL additionalInformationRequired;
@property (nonatomic, readonly) BOOL termsConfirmed;
- (nonnull instancetype)initWithPasswordRequired:(BOOL)passwordRequired accessToken:(NSString * _Nullable)accessToken cards:(NSArray<EMLCardModel *> * _Nullable)cards current:(EMLCardModel * _Nullable)current currentId:(NSString * _Nullable)currentId offers:(NSArray<EMLOffer *> * _Nonnull)offers additionalInformationRequired:(BOOL)additionalInformationRequired termsConfirmed:(BOOL)termsConfirmed OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLRedeemGiftCardViewModel")
@interface EMLRedeemGiftCardViewModel : NSObject
@property (nonatomic, readonly) BOOL passwordRequired;
@property (nonatomic, readonly) NSError * _Nullable error;
@property (nonatomic, readonly, strong) EMLCardModel * _Nullable currentCard;
- (nonnull instancetype)initWithPasswordRequired:(BOOL)passwordRequired currentCard:(EMLCardModel * _Nullable)currentCard error:(NSError * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class EMLTransactionsRequestModel;
@class EMLTransactionsResponseModel;
@class ManagePinDisplayRequest;
@class UIViewController;
enum EMLWalletStatus : NSInteger;
@class EMLShowCardNotPresentDetailsRequest;

SWIFT_PROTOCOL_NAMED("EMLStoreProtocol")
@protocol EMLStoreProtocol
- (void)setAuthenticationTokenWithToken:(NSString * _Nonnull)token username:(NSString * _Nullable)username onComplete:(void (^ _Nonnull)(void))onComplete;
- (void)logoutOnComplete:(void (^ _Nullable)(void))onComplete;
- (BOOL)isLoggedIn SWIFT_WARN_UNUSED_RESULT;
- (void)activateWithRequest:(EMLCardActivationRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)deactivateWithRequest:(EMLDeactivateCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)activatePlasticWithRequest:(EMLPlasticActivationRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getTransactionHistoryWithRequest:(EMLTransactionsRequestModel * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLTransactionsResponseModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showUpdatePinWithRequest:(ManagePinDisplayRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showPinWithCard:(EMLCardModel * _Nonnull)card displayOptions:(EMLCardDisplayEntity * _Nonnull)displayOptions presentingViewController:(UIViewController * _Nonnull)presentingViewController onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getWalletStatusWithRequest:(EMLGetWalletStatusRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(enum EMLWalletStatus))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)addCardToWalletWithRequest:(EMLAddToWalletRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(enum EMLWalletStatus))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getAccountSummaryWithRequest:(EMLAccountSummaryRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLAccountStatusModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getAccountDetailsWithRequest:(EMLAccountDetailsRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLAccountDetailsModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull, NSString * _Nonnull))onError;
/// Update details against the given account
/// \param card card for account
///
/// \param accountUpdateDetails Details of changes
///
/// \param onComplete called on success
///
/// \param onError called if an error occurs
///
- (void)updateAccountDetailsWithCard:(EMLCardModel * _Nonnull)card accountUpdateDetails:(EMLAccountUpdate * _Nonnull)accountUpdateDetails onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showCardNotPresentDetailsWithRequest:(EMLShowCardNotPresentDetailsRequest * _Nonnull)request;
- (NSString * _Nullable)getCurrentUsername SWIFT_WARN_UNUSED_RESULT;
- (NSArray<EMLCardModel *> * _Nonnull)getCurrentCards SWIFT_WARN_UNUSED_RESULT;
- (NSArray<EMLOffer *> * _Nonnull)getCurrentOffers SWIFT_WARN_UNUSED_RESULT;
- (void)loginWithRequest:(EMLLoginRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLLoginResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)redeemGiftCardWithRequest:(EMLRedeemGiftCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLRedeemGiftCardResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)checkClaimWithRequest:(EMLRedeemGiftCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLOffer * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)addPlasticWithPhone:(NSString * _Nonnull)phone searchParam:(NSString * _Nonnull)searchParam securityCode:(NSString * _Nullable)securityCode processor:(enum EMLProcessor)processor password:(NSString * _Nullable)password additionalUserInfo:(EMLAdditionalUserInfo * _Nullable)additionalUserInfo onComplete:(void (^ _Nonnull)(EMLRedeemGiftCardResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)redeemOfferWithId:(NSString * _Nonnull)id onComplete:(void (^ _Nonnull)(EMLCurrentLogin * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)resetPasswordWithRequest:(EMLPasswordResetRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLPasswordResetResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)isUpdateRequiredOnComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getConfigOnComplete:(void (^ _Nonnull)(id <EMLConfigEntity> _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)acceptTermsOnComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)acceptExtraTermsOnComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)isNewTermsOnComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
@end

enum EMLSDKEnvironment : NSInteger;

SWIFT_CLASS_NAMED("EMLSDK")
@interface EMLSDK : NSObject <EMLStoreProtocol>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) EMLSDK * _Nonnull shared;)
+ (EMLSDK * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(EMLSDK * _Nonnull)value;
@property (nonatomic) BOOL isTesting;
- (enum EMLSDKEnvironment)getSDKEnvironment SWIFT_WARN_UNUSED_RESULT;
- (void)configureWithSubscriptionKey:(NSString * _Nonnull)subscriptionKey environment:(enum EMLSDKEnvironment)environment debug:(BOOL)debug applicationKeyId:(NSString * _Nullable)applicationKeyId applicationKeySecret:(NSString * _Nullable)applicationKeySecret;
- (NSString * _Nullable)getCurrentUsername SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isLoggedIn SWIFT_WARN_UNUSED_RESULT;
- (NSArray<EMLCardModel *> * _Nonnull)getCurrentCards SWIFT_WARN_UNUSED_RESULT;
- (NSArray<EMLOffer *> * _Nonnull)getCurrentOffers SWIFT_WARN_UNUSED_RESULT;
- (void)setAuthenticationTokenWithToken:(NSString * _Nonnull)token username:(NSString * _Nullable)username onComplete:(void (^ _Nonnull)(void))onComplete;
- (void)loginWithRequest:(EMLLoginRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLLoginResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)logoutOnComplete:(void (^ _Nullable)(void))onComplete;
- (void)getAccountSummaryWithRequest:(EMLAccountSummaryRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLAccountStatusModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getAccountDetailsWithRequest:(EMLAccountDetailsRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLAccountDetailsModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull, NSString * _Nonnull))onError;
- (void)updateAccountDetailsWithCard:(EMLCardModel * _Nonnull)card accountUpdateDetails:(EMLAccountUpdate * _Nonnull)accountUpdateDetails onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)activateWithRequest:(EMLCardActivationRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)deactivateWithRequest:(EMLDeactivateCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)activatePlasticWithRequest:(EMLPlasticActivationRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getConfigOnComplete:(void (^ _Nonnull)(id <EMLConfigEntity> _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getTransactionHistoryWithOffset:(NSInteger)offset limit:(NSInteger)limit days:(NSInteger)days includeDiscount:(BOOL)includeDiscount onComplete:(void (^ _Nonnull)(EMLTransactionsResponseModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getTransactionHistoryWithRequest:(EMLTransactionsRequestModel * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLTransactionsResponseModel * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showUpdatePinWithRequest:(ManagePinDisplayRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showPinWithCard:(EMLCardModel * _Nonnull)card displayOptions:(EMLCardDisplayEntity * _Nonnull)displayOptions presentingViewController:(UIViewController * _Nonnull)presentingViewController onComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)getWalletStatusWithRequest:(EMLGetWalletStatusRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(enum EMLWalletStatus))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)addCardToWalletWithRequest:(EMLAddToWalletRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(enum EMLWalletStatus))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)acceptTermsOnComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)acceptExtraTermsOnComplete:(void (^ _Nonnull)(void))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)isNewTermsOnComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)redeemGiftCardWithRequest:(EMLRedeemGiftCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLRedeemGiftCardResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)checkClaimWithRequest:(EMLRedeemGiftCardRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLOffer * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)addPlasticWithPhone:(NSString * _Nonnull)phone searchParam:(NSString * _Nonnull)searchParam securityCode:(NSString * _Nullable)securityCode processor:(enum EMLProcessor)processor password:(NSString * _Nullable)password additionalUserInfo:(EMLAdditionalUserInfo * _Nullable)additionalUserInfo onComplete:(void (^ _Nonnull)(EMLRedeemGiftCardResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)redeemOfferWithId:(NSString * _Nonnull)id onComplete:(void (^ _Nonnull)(EMLCurrentLogin * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)showCardNotPresentDetailsWithRequest:(EMLShowCardNotPresentDetailsRequest * _Nonnull)request;
- (void)getCardNotPresentDetailsWithCard:(EMLCardModel * _Nonnull)card onComplete:(void (^ _Nonnull)(EMLCardNotPresentDetails * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)resetPasswordWithRequest:(EMLPasswordResetRequest * _Nonnull)request onComplete:(void (^ _Nonnull)(EMLPasswordResetResponse * _Nonnull))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (void)isUpdateRequiredOnComplete:(void (^ _Nonnull)(BOOL))onComplete onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLSDKEnvironment, "EMLSDKEnvironment", open) {
  EMLSDKEnvironmentBeta = 0,
  EMLSDKEnvironmentPreProd = 1,
  EMLSDKEnvironmentProd = 2,
};


SWIFT_CLASS_NAMED("EMLShowCardNotPresentDetailsRequest")
@interface EMLShowCardNotPresentDetailsRequest : NSObject
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card displayOptions:(EMLCardDisplayEntity * _Nonnull)displayOptions OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLShowPinError")
@interface EMLShowPinError : NSObject
@property (nonatomic, readonly, strong) EMLErrorModel * _Nonnull error;
@property (nonatomic, readonly) BOOL refreshAuth;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("EMLStateEntity")
@protocol EMLStateEntity
- (NSInteger)getCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isActive SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLegacyCode SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL_NAMED("EMLTextEntity")
@protocol EMLTextEntity
- (NSString * _Nonnull)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLTextModel")
@interface EMLTextModel : NSObject <EMLTextEntity>
- (nonnull instancetype)initWithDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title description:(NSString * _Nonnull)description OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLTokenStatus, "EMLTokenStatus", open) {
  EMLTokenStatusActive = 0,
  EMLTokenStatusUnmapped = 1,
  EMLTokenStatusSuspended = 2,
  EMLTokenStatusUnknown = 3,
};


SWIFT_PROTOCOL_NAMED("EMLTransactionEntity")
@protocol EMLTransactionEntity
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getParentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTypeId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTypeDescription SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nonnull)getDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nonnull)getBaseAmount SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nullable)getRunningBalance SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nullable)getFeeTotal SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getMccCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCategory SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("EMLTransactionModel")
@interface EMLTransactionModel : NSObject <EMLTransactionEntity>
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable parentId;
@property (nonatomic, readonly, copy) NSString * _Nullable typeId;
@property (nonatomic, readonly, copy) NSString * _Nullable typeDescription;
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nonnull desc;
@property (nonatomic, readonly, strong) Currency * _Nonnull baseAmount;
@property (nonatomic, readonly, strong) Currency * _Nullable runningBalance;
@property (nonatomic, readonly, strong) Currency * _Nullable feeTotal;
@property (nonatomic, readonly) NSInteger mccCode;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, strong) Currency * _Nullable discountAmount;
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getParentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTypeId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTypeDescription SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nonnull)getDate SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDesc SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nonnull)getBaseAmount SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nullable)getRunningBalance SWIFT_WARN_UNUSED_RESULT;
- (Currency * _Nullable)getFeeTotal SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getMccCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCategory SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLTransactionsRequestModel")
@interface EMLTransactionsRequestModel : NSObject
@property (nonatomic, readonly, strong) EMLCardModel * _Nonnull card;
@property (nonatomic, readonly) NSInteger offset;
@property (nonatomic, readonly) NSInteger limit;
@property (nonatomic, readonly, copy) NSDate * _Nullable startDate;
@property (nonatomic, readonly, copy) NSDate * _Nullable endDate;
@property (nonatomic, readonly) BOOL includeDiscount;
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card offset:(NSInteger)offset limit:(NSInteger)limit startDate:(NSDate * _Nullable)startDate endDate:(NSDate * _Nullable)endDate includeDiscount:(BOOL)includeDiscount OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("EMLTransactionsResponseModel")
@interface EMLTransactionsResponseModel : NSObject
- (NSArray<id <EMLTransactionEntity>> * _Nonnull)getTransactions SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getResultsCount SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getTotalCount SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getResultsOffset SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithTransactions:(NSArray<EMLTransactionModel *> * _Nonnull)transactions resultsCount:(NSInteger)resultsCount totalCount:(NSInteger)totalCount externalAccountId:(NSString * _Nonnull)externalAccountId resultsOffset:(NSInteger)resultsOffset OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, EMLWalletStatus, "EMLWalletStatus", open) {
  EMLWalletStatusUnavailable = 0,
  EMLWalletStatusAvailable = 1,
  EMLWalletStatusCancelled = 2,
  EMLWalletStatusAdded = 3,
};


SWIFT_CLASS_NAMED("EmlApiException")
@interface EmlApiException : NSObject
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode model:(EMLErrorModel * _Nonnull)model OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)getStatusCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS_NAMED("EmlPinException")
@interface EmlPinException : EmlApiException
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode model:(EMLErrorModel * _Nonnull)model cancelled:(BOOL)cancelled unauthorized:(BOOL)unauthorized forceLogout:(BOOL)forceLogout offerRetry:(BOOL)offerRetry OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode message:(NSString * _Nonnull)message cancelled:(BOOL)cancelled unauthorized:(BOOL)unauthorized forceLogout:(BOOL)forceLogout offerRetry:(BOOL)offerRetry OBJC_DESIGNATED_INITIALIZER;
- (BOOL)getCancelled SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getUnauthorized SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getGorceLogout SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode model:(EMLErrorModel * _Nonnull)model SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithStatusCode:(NSInteger)statusCode message:(NSString * _Nonnull)message SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("FetchTermsRequest")
@interface FetchTermsRequest : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("FetchTermsResponse")
@interface FetchTermsResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9EMLiOSSDK19FetchTermsViewModel")
@interface FetchTermsViewModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinDisplayRequest")
@interface ManagePinDisplayRequest : NSObject
- (nonnull instancetype)initWithCard:(EMLCardModel * _Nonnull)card displayOptions:(EMLDisplayModel * _Nonnull)displayOptions OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinExecuteRequest")
@interface ManagePinExecuteRequest : NSObject
- (nonnull instancetype)initWithOtpString:(NSString * _Nonnull)otpString operationId:(NSString * _Nonnull)operationId pin:(NSString * _Nonnull)pin deviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinInitiateRequest")
@interface ManagePinInitiateRequest : NSObject
- (nonnull instancetype)initWithDeviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinInitiateResponse")
@interface ManagePinInitiateResponse : NSObject
- (nonnull instancetype)initWithOperationId:(NSString * _Nonnull)operationId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinUpdateRequest")
@interface ManagePinUpdateRequest : NSObject
- (nonnull instancetype)initWithDeviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinUpdateResponse")
@interface ManagePinUpdateResponse : NSObject
- (nonnull instancetype)initWithPhoneNumber:(NSString * _Nonnull)phoneNumber emailAddress:(NSString * _Nonnull)emailAddress OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("ManagePinValidateRequest")
@interface ManagePinValidateRequest : NSObject
- (nonnull instancetype)initWithOtpString:(NSString * _Nonnull)otpString operationId:(NSString * _Nonnull)operationId deviceId:(NSString * _Nonnull)deviceId eaid:(NSString * _Nonnull)eaid cid:(NSString * _Nonnull)cid processor:(NSString * _Nonnull)processor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
